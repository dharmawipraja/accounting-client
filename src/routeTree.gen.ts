/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users/index'
import { Route as LedgersIndexRouteImport } from './routes/ledgers/index'
import { Route as UsersNewRouteImport } from './routes/users/new'
import { Route as LedgersNewRouteImport } from './routes/ledgers/new'
import { Route as LedgersKasMasukRouteImport } from './routes/ledgers/kas-masuk'
import { Route as LedgersKasKeluarRouteImport } from './routes/ledgers/kas-keluar'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as UsersIdIndexRouteImport } from './routes/users/$id/index'
import { Route as LedgersIdIndexRouteImport } from './routes/ledgers/$id/index'
import { Route as AccountsGeneralIndexRouteImport } from './routes/accounts/general/index'
import { Route as AccountsDetailIndexRouteImport } from './routes/accounts/detail/index'
import { Route as UsersIdEditRouteImport } from './routes/users/$id/edit'
import { Route as LedgersIdEditRouteImport } from './routes/ledgers/$id/edit'
import { Route as AccountsGeneralNewRouteImport } from './routes/accounts/general/new'
import { Route as AccountsDetailNewRouteImport } from './routes/accounts/detail/new'
import { Route as AccountsGeneralIdEditRouteImport } from './routes/accounts/general/$id/edit'
import { Route as AccountsDetailIdEditRouteImport } from './routes/accounts/detail/$id/edit'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersIndexRoute = LedgersIndexRouteImport.update({
  id: '/ledgers/',
  path: '/ledgers/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersNewRoute = UsersNewRouteImport.update({
  id: '/users/new',
  path: '/users/new',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersNewRoute = LedgersNewRouteImport.update({
  id: '/ledgers/new',
  path: '/ledgers/new',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersKasMasukRoute = LedgersKasMasukRouteImport.update({
  id: '/ledgers/kas-masuk',
  path: '/ledgers/kas-masuk',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersKasKeluarRoute = LedgersKasKeluarRouteImport.update({
  id: '/ledgers/kas-keluar',
  path: '/ledgers/kas-keluar',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIdIndexRoute = UsersIdIndexRouteImport.update({
  id: '/users/$id/',
  path: '/users/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersIdIndexRoute = LedgersIdIndexRouteImport.update({
  id: '/ledgers/$id/',
  path: '/ledgers/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsGeneralIndexRoute = AccountsGeneralIndexRouteImport.update({
  id: '/accounts/general/',
  path: '/accounts/general/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsDetailIndexRoute = AccountsDetailIndexRouteImport.update({
  id: '/accounts/detail/',
  path: '/accounts/detail/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIdEditRoute = UsersIdEditRouteImport.update({
  id: '/users/$id/edit',
  path: '/users/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const LedgersIdEditRoute = LedgersIdEditRouteImport.update({
  id: '/ledgers/$id/edit',
  path: '/ledgers/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsGeneralNewRoute = AccountsGeneralNewRouteImport.update({
  id: '/accounts/general/new',
  path: '/accounts/general/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsDetailNewRoute = AccountsDetailNewRouteImport.update({
  id: '/accounts/detail/new',
  path: '/accounts/detail/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsGeneralIdEditRoute = AccountsGeneralIdEditRouteImport.update({
  id: '/accounts/general/$id/edit',
  path: '/accounts/general/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsDetailIdEditRoute = AccountsDetailIdEditRouteImport.update({
  id: '/accounts/detail/$id/edit',
  path: '/accounts/detail/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/ledgers/kas-keluar': typeof LedgersKasKeluarRoute
  '/ledgers/kas-masuk': typeof LedgersKasMasukRoute
  '/ledgers/new': typeof LedgersNewRoute
  '/users/new': typeof UsersNewRoute
  '/ledgers': typeof LedgersIndexRoute
  '/users': typeof UsersIndexRoute
  '/accounts/detail/new': typeof AccountsDetailNewRoute
  '/accounts/general/new': typeof AccountsGeneralNewRoute
  '/ledgers/$id/edit': typeof LedgersIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/accounts/detail': typeof AccountsDetailIndexRoute
  '/accounts/general': typeof AccountsGeneralIndexRoute
  '/ledgers/$id': typeof LedgersIdIndexRoute
  '/users/$id': typeof UsersIdIndexRoute
  '/accounts/detail/$id/edit': typeof AccountsDetailIdEditRoute
  '/accounts/general/$id/edit': typeof AccountsGeneralIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/ledgers/kas-keluar': typeof LedgersKasKeluarRoute
  '/ledgers/kas-masuk': typeof LedgersKasMasukRoute
  '/ledgers/new': typeof LedgersNewRoute
  '/users/new': typeof UsersNewRoute
  '/ledgers': typeof LedgersIndexRoute
  '/users': typeof UsersIndexRoute
  '/accounts/detail/new': typeof AccountsDetailNewRoute
  '/accounts/general/new': typeof AccountsGeneralNewRoute
  '/ledgers/$id/edit': typeof LedgersIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/accounts/detail': typeof AccountsDetailIndexRoute
  '/accounts/general': typeof AccountsGeneralIndexRoute
  '/ledgers/$id': typeof LedgersIdIndexRoute
  '/users/$id': typeof UsersIdIndexRoute
  '/accounts/detail/$id/edit': typeof AccountsDetailIdEditRoute
  '/accounts/general/$id/edit': typeof AccountsGeneralIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/ledgers/kas-keluar': typeof LedgersKasKeluarRoute
  '/ledgers/kas-masuk': typeof LedgersKasMasukRoute
  '/ledgers/new': typeof LedgersNewRoute
  '/users/new': typeof UsersNewRoute
  '/ledgers/': typeof LedgersIndexRoute
  '/users/': typeof UsersIndexRoute
  '/accounts/detail/new': typeof AccountsDetailNewRoute
  '/accounts/general/new': typeof AccountsGeneralNewRoute
  '/ledgers/$id/edit': typeof LedgersIdEditRoute
  '/users/$id/edit': typeof UsersIdEditRoute
  '/accounts/detail/': typeof AccountsDetailIndexRoute
  '/accounts/general/': typeof AccountsGeneralIndexRoute
  '/ledgers/$id/': typeof LedgersIdIndexRoute
  '/users/$id/': typeof UsersIdIndexRoute
  '/accounts/detail/$id/edit': typeof AccountsDetailIdEditRoute
  '/accounts/general/$id/edit': typeof AccountsGeneralIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/ledgers/kas-keluar'
    | '/ledgers/kas-masuk'
    | '/ledgers/new'
    | '/users/new'
    | '/ledgers'
    | '/users'
    | '/accounts/detail/new'
    | '/accounts/general/new'
    | '/ledgers/$id/edit'
    | '/users/$id/edit'
    | '/accounts/detail'
    | '/accounts/general'
    | '/ledgers/$id'
    | '/users/$id'
    | '/accounts/detail/$id/edit'
    | '/accounts/general/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/ledgers/kas-keluar'
    | '/ledgers/kas-masuk'
    | '/ledgers/new'
    | '/users/new'
    | '/ledgers'
    | '/users'
    | '/accounts/detail/new'
    | '/accounts/general/new'
    | '/ledgers/$id/edit'
    | '/users/$id/edit'
    | '/accounts/detail'
    | '/accounts/general'
    | '/ledgers/$id'
    | '/users/$id'
    | '/accounts/detail/$id/edit'
    | '/accounts/general/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/ledgers/kas-keluar'
    | '/ledgers/kas-masuk'
    | '/ledgers/new'
    | '/users/new'
    | '/ledgers/'
    | '/users/'
    | '/accounts/detail/new'
    | '/accounts/general/new'
    | '/ledgers/$id/edit'
    | '/users/$id/edit'
    | '/accounts/detail/'
    | '/accounts/general/'
    | '/ledgers/$id/'
    | '/users/$id/'
    | '/accounts/detail/$id/edit'
    | '/accounts/general/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  AuthLoginRoute: typeof AuthLoginRoute
  LedgersKasKeluarRoute: typeof LedgersKasKeluarRoute
  LedgersKasMasukRoute: typeof LedgersKasMasukRoute
  LedgersNewRoute: typeof LedgersNewRoute
  UsersNewRoute: typeof UsersNewRoute
  LedgersIndexRoute: typeof LedgersIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  AccountsDetailNewRoute: typeof AccountsDetailNewRoute
  AccountsGeneralNewRoute: typeof AccountsGeneralNewRoute
  LedgersIdEditRoute: typeof LedgersIdEditRoute
  UsersIdEditRoute: typeof UsersIdEditRoute
  AccountsDetailIndexRoute: typeof AccountsDetailIndexRoute
  AccountsGeneralIndexRoute: typeof AccountsGeneralIndexRoute
  LedgersIdIndexRoute: typeof LedgersIdIndexRoute
  UsersIdIndexRoute: typeof UsersIdIndexRoute
  AccountsDetailIdEditRoute: typeof AccountsDetailIdEditRoute
  AccountsGeneralIdEditRoute: typeof AccountsGeneralIdEditRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/': {
      id: '/ledgers/'
      path: '/ledgers'
      fullPath: '/ledgers'
      preLoaderRoute: typeof LedgersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/new': {
      id: '/users/new'
      path: '/users/new'
      fullPath: '/users/new'
      preLoaderRoute: typeof UsersNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/new': {
      id: '/ledgers/new'
      path: '/ledgers/new'
      fullPath: '/ledgers/new'
      preLoaderRoute: typeof LedgersNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/kas-masuk': {
      id: '/ledgers/kas-masuk'
      path: '/ledgers/kas-masuk'
      fullPath: '/ledgers/kas-masuk'
      preLoaderRoute: typeof LedgersKasMasukRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/kas-keluar': {
      id: '/ledgers/kas-keluar'
      path: '/ledgers/kas-keluar'
      fullPath: '/ledgers/kas-keluar'
      preLoaderRoute: typeof LedgersKasKeluarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id/': {
      id: '/users/$id/'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof UsersIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/$id/': {
      id: '/ledgers/$id/'
      path: '/ledgers/$id'
      fullPath: '/ledgers/$id'
      preLoaderRoute: typeof LedgersIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/general/': {
      id: '/accounts/general/'
      path: '/accounts/general'
      fullPath: '/accounts/general'
      preLoaderRoute: typeof AccountsGeneralIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/detail/': {
      id: '/accounts/detail/'
      path: '/accounts/detail'
      fullPath: '/accounts/detail'
      preLoaderRoute: typeof AccountsDetailIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id/edit': {
      id: '/users/$id/edit'
      path: '/users/$id/edit'
      fullPath: '/users/$id/edit'
      preLoaderRoute: typeof UsersIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ledgers/$id/edit': {
      id: '/ledgers/$id/edit'
      path: '/ledgers/$id/edit'
      fullPath: '/ledgers/$id/edit'
      preLoaderRoute: typeof LedgersIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/general/new': {
      id: '/accounts/general/new'
      path: '/accounts/general/new'
      fullPath: '/accounts/general/new'
      preLoaderRoute: typeof AccountsGeneralNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/detail/new': {
      id: '/accounts/detail/new'
      path: '/accounts/detail/new'
      fullPath: '/accounts/detail/new'
      preLoaderRoute: typeof AccountsDetailNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/general/$id/edit': {
      id: '/accounts/general/$id/edit'
      path: '/accounts/general/$id/edit'
      fullPath: '/accounts/general/$id/edit'
      preLoaderRoute: typeof AccountsGeneralIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts/detail/$id/edit': {
      id: '/accounts/detail/$id/edit'
      path: '/accounts/detail/$id/edit'
      fullPath: '/accounts/detail/$id/edit'
      preLoaderRoute: typeof AccountsDetailIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  AuthLoginRoute: AuthLoginRoute,
  LedgersKasKeluarRoute: LedgersKasKeluarRoute,
  LedgersKasMasukRoute: LedgersKasMasukRoute,
  LedgersNewRoute: LedgersNewRoute,
  UsersNewRoute: UsersNewRoute,
  LedgersIndexRoute: LedgersIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  AccountsDetailNewRoute: AccountsDetailNewRoute,
  AccountsGeneralNewRoute: AccountsGeneralNewRoute,
  LedgersIdEditRoute: LedgersIdEditRoute,
  UsersIdEditRoute: UsersIdEditRoute,
  AccountsDetailIndexRoute: AccountsDetailIndexRoute,
  AccountsGeneralIndexRoute: AccountsGeneralIndexRoute,
  LedgersIdIndexRoute: LedgersIdIndexRoute,
  UsersIdIndexRoute: UsersIdIndexRoute,
  AccountsDetailIdEditRoute: AccountsDetailIdEditRoute,
  AccountsGeneralIdEditRoute: AccountsGeneralIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
